{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","dateTime","timeZone","location","onClick","href","htmlLink","target","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","handleInputChange","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","start","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a149b54b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport class Event extends Component {\n    state = {\n        collapsed: true\n    };\n    handleClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    };\n\n    render() {\n        const { event } = this.props;\n        const { collapsed } = this.state;\n\n\n        return <div className='event'>\n\n            <h1 className='summary'>{event.summary}</h1>\n            <p className='dateTime'>{event.dateTime}</p>\n            <p className='timeZone'>{event.timeZone}</p>\n            <p className='location'>@{event.summary} | {event.location}</p>\n            {\n                <button className='show-details'\n                    onClick={this.handleClick}>show Details</button>\n            }\n            {\n                <div className=\"details-view\">\n                    <h2 className=\"details-header\">About event:</h2>\n                    <a href={event.htmlLink} className='htmlLink' target='_blank'>See details on Google Calendar</a>\n                    <p className='description'>{event.description}</p>\n                    <button className='hide-details'\n                        onClick={this.handleClick}>hide Details</button></div>\n            }\n        </div>;\n    }\n\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions,\n        });\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nclass NumberOfEvents extends Component {\n    state = {\n        numberOfEvents: '32',\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            numberOfEvents: event.target.value,\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"NumberOfEvents\">\n                <input\n                    type=\"number\"\n                    className=\"number\"\n                    value={this.state.numberOfEvents}\n                    onChange={this.handleInputChange}\n                />\n            </div>\n\n        )\n    }\n};\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    }\n\n];\n\nexport { mockData };\n\n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://bokp5t9nbh.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'https://bokp5t9nbh.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://bokp5t9nbh.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}